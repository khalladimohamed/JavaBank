package GUI;

import Agence.AgenceBancaire;
import Personne.Employe;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class JDialogSupprimerEmploye extends JDialog {
    private JTextField textFieldIdEmploye;
    private JButton buttonSupprimerEmploye;
    private JButton buttonAnnuler;
    private JPanel mainPanel;

    private String idEmploye;


    public JDialogSupprimerEmploye() {
        super();
        setContentPane(mainPanel);
        setTitle("Supprimer employe");
        pack();
        setModal(true);
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        // Accéder à l'instance unique de AgenceBancaire
        AgenceBancaire agenceBancaire = AgenceBancaire.getInstance();

        buttonAnnuler.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                setVisible(false);
            }
        });

        buttonSupprimerEmploye.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                idEmploye = textFieldIdEmploye.getText();

                /*// Récupération de la liste des employés
                ArrayList<Employe> employes = agenceBancaire.getEmploye();
                // Recherche de l'employé correspondant à l'ID saisi
                for (Employe employe : employes) {
                    if (employe.getIdEmploye().equals(idEmploye)) {
                        // Suppression de l'employé de la liste
                        employes.remove(employe);
                        break;
                    }
                }*/

                // Recherche du client correspondant à l'ID fourni
                Employe employeASupprimer = null;
                for (Employe emp : agenceBancaire.getEmploye()) {
                    if (emp.getIdEmploye().equals(idEmploye)) {
                        employeASupprimer = emp;
                        break;
                    }
                }

                // Suppression du client de la liste
                if (employeASupprimer != null) {
                    agenceBancaire.getEmploye().remove(employeASupprimer);

                    JOptionPane.showMessageDialog(null, "L'employe a été supprimé");
                } else {
                    JOptionPane.showMessageDialog(null, "Aucun employe trouvé avec cette ID");
                }

                setVisible(false);
            }
        });
    }

    public static void main(String[] args) {
        JDialogSupprimerEmploye dialog = new JDialogSupprimerEmploye();
        dialog.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(2, 2, new Insets(10, 10, 10, 10), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Id employe :");
        mainPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textFieldIdEmploye = new JTextField();
        textFieldIdEmploye.setText("");
        mainPanel.add(textFieldIdEmploye, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel1, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        buttonSupprimerEmploye = new JButton();
        buttonSupprimerEmploye.setText("Supprimer");
        panel1.add(buttonSupprimerEmploye, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        buttonAnnuler = new JButton();
        buttonAnnuler.setText("Annuler");
        panel1.add(buttonAnnuler, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        panel1.add(spacer2, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
